// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using RestApiOrders.Model.Context;

#nullable disable

namespace RestApiOrders.Migrations
{
    [DbContext(typeof(CompanyContext))]
    partial class CompanyContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.29")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.Entity("RestApiOrders.Model.Category", b =>
                {
                    b.Property<int>("IdCategory")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdCategory"), 1L, 1);

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("IdCategory");

                    b.ToTable("Category");
                });

            modelBuilder.Entity("RestApiOrders.Model.Client", b =>
                {
                    b.Property<int>("IdClient")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdClient"), 1L, 1);

                    b.Property<string>("Address")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PhoneNumber")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("IdClient");

                    b.ToTable("Client");
                });

            modelBuilder.Entity("RestApiOrders.Model.Item", b =>
                {
                    b.Property<int>("IdItem")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdItem"), 1L, 1);

                    b.Property<string>("Code")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FotoUrl")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("IdCategory")
                        .HasColumnType("int");

                    b.Property<int?>("IdUnitOfMeasurement")
                        .HasColumnType("int");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal?>("Price")
                        .HasColumnType("decimal(18,0)");

                    b.Property<decimal?>("Quantity")
                        .HasColumnType("decimal(18,0)");

                    b.HasKey("IdItem");

                    b.HasIndex("IdCategory");

                    b.HasIndex("IdUnitOfMeasurement");

                    b.ToTable("Item");
                });

            modelBuilder.Entity("RestApiOrders.Model.Order", b =>
                {
                    b.Property<int>("IdOrder")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdOrder"), 1L, 1);

                    b.Property<DateTime?>("DataOrder")
                        .HasColumnType("datetime");

                    b.Property<DateTime?>("DeliveryDate")
                        .HasColumnType("datetime");

                    b.Property<int?>("IdClient")
                        .HasColumnType("int");

                    b.Property<int?>("IdWorker")
                        .HasColumnType("int");

                    b.Property<string>("Notes")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("IdOrder")
                        .HasName("PK__Order__C38F300946897B18");

                    b.HasIndex("IdClient");

                    b.HasIndex("IdWorker");

                    b.ToTable("Order");
                });

            modelBuilder.Entity("RestApiOrders.Model.OrderItem", b =>
                {
                    b.Property<int>("IdOrderItem")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdOrderItem"), 1L, 1);

                    b.Property<int>("IdItem")
                        .HasColumnType("int");

                    b.Property<int>("IdOrder")
                        .HasColumnType("int");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<decimal?>("Quantity")
                        .HasColumnType("decimal(18,0)");

                    b.HasKey("IdOrderItem");

                    b.HasIndex("IdItem");

                    b.HasIndex("IdOrder");

                    b.ToTable("OrderItem");
                });

            modelBuilder.Entity("RestApiOrders.Model.UnitOfMeasurement", b =>
                {
                    b.Property<int>("IdUnitOfMeasurement")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdUnitOfMeasurement"), 1L, 1);

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("IdUnitOfMeasurement");

                    b.ToTable("UnitOfMeasurement");
                });

            modelBuilder.Entity("RestApiOrders.Model.User", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("Login")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Users");
                });

            modelBuilder.Entity("RestApiOrders.Model.Worker", b =>
                {
                    b.Property<int>("IdWorker")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdWorker"), 1L, 1);

                    b.Property<string>("FirstName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<string>("LastName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Login")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Password")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("IdWorker");

                    b.ToTable("Worker");
                });

            modelBuilder.Entity("RestApiOrders.Model.Item", b =>
                {
                    b.HasOne("RestApiOrders.Model.Category", "IdCategoryNavigation")
                        .WithMany("Items")
                        .HasForeignKey("IdCategory")
                        .IsRequired()
                        .HasConstraintName("FK_Item_Category");

                    b.HasOne("RestApiOrders.Model.UnitOfMeasurement", "IdUnitOfMeasurementNavigation")
                        .WithMany("Items")
                        .HasForeignKey("IdUnitOfMeasurement")
                        .HasConstraintName("FK_Item_UnitOfMeasurement");

                    b.Navigation("IdCategoryNavigation");

                    b.Navigation("IdUnitOfMeasurementNavigation");
                });

            modelBuilder.Entity("RestApiOrders.Model.Order", b =>
                {
                    b.HasOne("RestApiOrders.Model.Client", "IdClientNavigation")
                        .WithMany("Orders")
                        .HasForeignKey("IdClient")
                        .HasConstraintName("FK_Order_Client");

                    b.HasOne("RestApiOrders.Model.Worker", "IdWorkerNavigation")
                        .WithMany("Orders")
                        .HasForeignKey("IdWorker")
                        .HasConstraintName("FK_Order_Worker");

                    b.Navigation("IdClientNavigation");

                    b.Navigation("IdWorkerNavigation");
                });

            modelBuilder.Entity("RestApiOrders.Model.OrderItem", b =>
                {
                    b.HasOne("RestApiOrders.Model.Item", "IdItemNavigation")
                        .WithMany("OrderItems")
                        .HasForeignKey("IdItem")
                        .IsRequired()
                        .HasConstraintName("FK_OrderItem_Item");

                    b.HasOne("RestApiOrders.Model.Order", "IdOrderNavigation")
                        .WithMany("OrderItems")
                        .HasForeignKey("IdOrder")
                        .IsRequired()
                        .HasConstraintName("FK_OrderItem_Order");

                    b.Navigation("IdItemNavigation");

                    b.Navigation("IdOrderNavigation");
                });

            modelBuilder.Entity("RestApiOrders.Model.Category", b =>
                {
                    b.Navigation("Items");
                });

            modelBuilder.Entity("RestApiOrders.Model.Client", b =>
                {
                    b.Navigation("Orders");
                });

            modelBuilder.Entity("RestApiOrders.Model.Item", b =>
                {
                    b.Navigation("OrderItems");
                });

            modelBuilder.Entity("RestApiOrders.Model.Order", b =>
                {
                    b.Navigation("OrderItems");
                });

            modelBuilder.Entity("RestApiOrders.Model.UnitOfMeasurement", b =>
                {
                    b.Navigation("Items");
                });

            modelBuilder.Entity("RestApiOrders.Model.Worker", b =>
                {
                    b.Navigation("Orders");
                });
#pragma warning restore 612, 618
        }
    }
}
